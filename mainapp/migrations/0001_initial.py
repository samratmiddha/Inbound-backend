# Generated by Django 4.1.1 on 2022-09-22 17:06

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(blank=True, choices=[('designer', 'Designer'), ('developer', 'Developer')], max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('enrolment_number', models.CharField(max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('branch', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=14, null=True)),
                ('CG', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(default=1)),
                ('enrollment_number', models.CharField(blank=True, max_length=8, null=True)),
                ('is_exterminated', models.BooleanField(default=False)),
                ('candidate_from', models.CharField(choices=[('P', 'Project'), ('T', 'Test'), ('O', 'Other')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'Candidates',
            },
        ),
        migrations.CreateModel(
            name='Interview_Panel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('location', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('tech', 'Tech'), ('hr', 'HR')], max_length=4, null=True)),
                ('members', models.ManyToManyField(related_name='panel_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Interview_Panels',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('submission_link', models.URLField(blank=True, max_length=300, null=True)),
                ('asignee', models.ManyToManyField(related_name='question_asignees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'question',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('I', 'Interview'), ('P', 'Project'), ('T', 'Test')], max_length=1)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Rounds',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('session', models.IntegerField(default=2022)),
                ('season_type', models.CharField(choices=[('designer', 'Designer'), ('developer', 'Developer')], max_length=10)),
                ('is_ongoing', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Seasons',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.IntegerField(blank=True, null=True)),
                ('Weightage', models.IntegerField(blank=True, default=1)),
                ('name', models.CharField(max_length=200)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_round', to='mainapp.round')),
            ],
            options={
                'verbose_name_plural': 'Sections',
            },
        ),
        migrations.CreateModel(
            name='Sectional_Marks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField(default=0)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_section', to='mainapp.section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectional_marks_student', to='mainapp.candidate')),
            ],
            options={
                'verbose_name_plural': 'Sectional_marks',
            },
        ),
        migrations.CreateModel(
            name='Round_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_start', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('marks_obtained', models.IntegerField(blank=True, default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('panel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='round_panel', to='mainapp.interview_panel')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_info', to='mainapp.round')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_student_info', to='mainapp.candidate')),
            ],
        ),
        migrations.AddField(
            model_name='round',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_season', to='mainapp.season'),
        ),
        migrations.CreateModel(
            name='Question_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField(blank=True, null=True)),
                ('normalized_marks', models.FloatField(default=models.IntegerField(blank=True, null=True))),
                ('is_checked', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_info', to='mainapp.question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_student_info', to='mainapp.candidate')),
            ],
            options={
                'verbose_name_plural': 'Question_Status',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_section', to='mainapp.section'),
        ),
        migrations.AddField(
            model_name='interview_panel',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='panel_season', to='mainapp.season'),
        ),
        migrations.CreateModel(
            name='InfoToConvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information', models.CharField(max_length=500)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_conveyed', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_info', to='mainapp.candidate')),
            ],
            options={
                'verbose_name_plural': 'InfoToConvey',
            },
        ),
        migrations.AddField(
            model_name='candidate',
            name='rounds',
            field=models.ManyToManyField(related_name='candidate_rounds', through='mainapp.Round_Info', to='mainapp.round'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_season', to='mainapp.season'),
        ),
    ]
